<Application x:Class="SchulPunkteUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SchulPunkteUI"
             StartupUri="KurseUebersicht.xaml">
    <Application.Resources>
        <!-- UI colors -->
        <Color x:Key="primaryColor">#FF2D2D30</Color>
        <Color x:Key="primaryLightColor">#FF3E3E42</Color>
        <Color x:Key="primaryLighterColor">#FF686868</Color>
        <Color x:Key="primaryDarkColor">#FF252526</Color>

        <Color x:Key="primaryHighlightedColor">#FF3399FF</Color>
        <Color x:Key="primaryErrorColor">#FFF9264A</Color>

        <Color x:Key="primaryTextColor">#FFF1F1F1</Color>
        <Color x:Key="secondaryTextColor">#FFD0D0D0</Color>
        
        <Color x:Key="disabledColor">#FFBFBFBF</Color>

        <!-- Brushes based on UI colors -->
        <SolidColorBrush x:Key="primaryBrush" Color="{StaticResource primaryColor}"/>
        <SolidColorBrush x:Key="primaryLightBrush" Color="{StaticResource primaryLightColor}"/>
        <SolidColorBrush x:Key="primaryLighterBrush" Color="{StaticResource primaryLighterColor}"/>
        <SolidColorBrush x:Key="primaryDarkBrush" Color="{StaticResource primaryDarkColor}"/>

        <SolidColorBrush x:Key="primaryHighlightedBrush" Color="{StaticResource primaryHighlightedColor}"/>
        <SolidColorBrush x:Key="primaryErrorBrush" Color="{StaticResource primaryErrorColor}"/>

        <SolidColorBrush x:Key="primaryTextBrush" Color="{StaticResource primaryTextColor}"/>
        <SolidColorBrush x:Key="secondaryTextBrush" Color="{StaticResource secondaryTextColor}"/>
        
        <SolidColorBrush x:Key="disabledBrush" Color="{StaticResource disabledColor}"/>

        <!-- Header style -->
        <Style x:Key="header" TargetType="{x:Type Label}">
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto"></Setter>
            <Setter Property="FontSize" Value="40"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="Margin" Value="0,0,0,5"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>
        
        <!-- Header01 style -->
        <Style x:Key="header01" TargetType="{x:Type Label}">
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto Light"></Setter>
            <Setter Property="FontSize" Value="30"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="Margin" Value="0,0,0,7.5"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <!-- Header02 style -->
        <Style x:Key="header02" TargetType="{x:Type Label}">
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto Thin"></Setter>
            <Setter Property="FontSize" Value="25"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <!-- Header03 style-->
        <Style x:Key="header03" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto Light"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="Margin" Value="0,0,0,2.5"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
        </Style>

        <!-- Header04 style-->
        <Style x:Key="header04" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
        </Style>

        <!-- NormalTextLabel style-->
        <Style x:Key="normalTextLabel" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Open_Sans/#Open Sans Light"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="Margin" Value="0,0,0,2.5"></Setter>
        </Style>

        <!-- NormalTextBlock style-->
        <Style x:Key="normalTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Open_Sans/#Open Sans Light"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="Margin" Value="0,0,0,2.5"></Setter>
            <Setter Property="TextWrapping" Value="Wrap"></Setter>
        </Style>

        <!-- WarningFeedbackLabel style -->
        <Style x:Key="warningFeedbackLabel" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="12.5"></Setter>
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Open_Sans/#Open Sans"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryErrorBrush}"></Setter>
            <Setter Property="Height" Value="27.5"></Setter>
            <Setter Property="Margin" Value="0,-2.5,0,0"></Setter>
        </Style>

        <!-- PrimaryBtn style -->
        <Style x:Key="primaryBtn" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Open_Sans/#Open Sans"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="ButtonBorder" Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="{StaticResource primaryLightBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin">
                <Setter.Value>
                    <Point X="0.5" Y="0.5"></Point>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource secondaryTextBrush}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource primaryLightBrush}"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.925" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="0.925" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="1.0" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="1.0" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </Style.Triggers>
        </Style>

        <!-- DefaultBtn style -->
        <!--
        <Style x:Key="defaultBtn" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Open_Sans/#Open Sans"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="Background" Value="#FFA6A6A6"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin">
                <Setter.Value>
                    <Point X="0.5" Y="0.5"></Point>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBFBFBF"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.925" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="0.925" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="1.0" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="1.0" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </Style.Triggers>
        </Style>
        -->
        <!-- DangerBtn style -->
        <!--
        <Style x:Key="dangerBtn" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Open_Sans/#Open Sans"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="Background" Value="#c0392b"></Setter>
            <Setter Property="Foreground" Value="#ecf0f1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin">
                <Setter.Value>
                    <Point X="0.5" Y="0.5"></Point>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e74c3c"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.925" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="0.925" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="1.0" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="1.0" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        -->
        <!-- ImageBtn style -->
        <Style x:Key="imageBtn" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"/>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
        </Style>

        <!-- DefaultListBoxItem style -->
        <Style x:Key="defaultListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"/>
        </Style>

        <!-- DefaultListBox style -->
        <Style x:Key="defaultListBox" TargetType="{x:Type ListBox}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource primaryLightBrush}"/>
            <Setter Property="Background" Value="{StaticResource primaryDarkBrush}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource defaultListBoxItem}"/>
        </Style>

        <!-- DefaultComboBoxItem style -->
        <Style x:Key="defaultComboBoxItem" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Background" Value="{StaticResource primaryDarkBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource secondaryTextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource primaryLightBrush}"/>
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto Light"/>
        </Style>

        <!-- DefaultComboBox style -->
        <Style x:Key="defaultComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{StaticResource primaryLightBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"/>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto"></Setter>
            <Setter Property="ItemContainerStyle" Value="{StaticResource defaultComboBoxItem}"/>
        </Style>
        
        <!-- DefaultFileDropArea style -->
        <Style x:Key="defaultFileDropArea" TargetType="{x:Type StackPanel}">
            <Setter Property="Background" Value="{StaticResource primaryDarkBrush}"/>
        </Style>

        <!-- DefaultTextBox style -->
        <Style x:Key="defaultTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{StaticResource primaryLightBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"/>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto"></Setter>
        </Style>

        <!-- DefaultMenu style -->
        <Style x:Key="defaultMenu" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource primaryBrush}"/>
            <Style.Resources>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto Light"/>
                    <Setter Property="FontSize" Value="15"></Setter>
                    <!--<Setter Property="Background" Value="{StaticResource primaryBrush}"/>-->
                    <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"/>
                </Style>
                <Style TargetType="{x:Type Separator}">
                    <!--<Setter Property="Foreground" Value="{StaticResource primaryLightBrush}"/>-->
                </Style>
                <Style TargetType="{x:Type Rectangle}">
                    <!--<Setter Property="Fill" Value="{StaticResource primaryDarkBrush}"/>-->
                </Style>
            </Style.Resources>
        </Style>
        
        <!-- DefaultTabControl style -->
        <Style x:Key="defaultTabControl" TargetType="{x:Type TabControl}">
            
        </Style>
        
        <!-- DefaultTabItem style -->
        <Style x:Key="defaultTabItem" TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="{StaticResource secondaryTextBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border
                                Name="Border"
                                Margin="0,0,0,0"
                                Background="{StaticResource primaryBrush}"
                                BorderBrush="Transparent"
                                BorderThickness="2"
                                CornerRadius="0">
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="12,2,12,2"
                                                  RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource primaryLightBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource primaryHighlightedBrush}"/>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource primaryDarkBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Application.Resources>
</Application>
