<Application x:Class="SchulPunkteUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SchulPunkteUI"
             StartupUri="KurseUebersicht.xaml">
    <Application.Resources>
        <!-- UI colors -->
        <Color x:Key="primaryColor">#546e7a</Color>
        <Color x:Key="primaryLightColor">#819ca9</Color>
        <Color x:Key="primaryDarkColor">#29434e</Color>
        <Color x:Key="secondaryColor">#546e7a</Color>
        <Color x:Key="secondaryLightColor">#819ca9</Color>
        <Color x:Key="secondaryDarkColor">#29434e</Color>
        <Color x:Key="primaryTextColor">#ffffff</Color>
        <Color x:Key="secondaryTextColor">#ffffff</Color>
        
        <!-- Brushes based on UI colors -->
        <SolidColorBrush x:Key="primaryBrush" Color="{StaticResource primaryColor}"/>
        <SolidColorBrush x:Key="primaryLightBrush" Color="{StaticResource primaryLightColor}"/>
        <SolidColorBrush x:Key="primaryDarkBrush" Color="{StaticResource primaryDarkColor}"/>
        <SolidColorBrush x:Key="secondaryBrush" Color="{StaticResource secondaryColor}"/>
        <SolidColorBrush x:Key="secondaryLightBrush" Color="{StaticResource secondaryLightColor}"/>
        <SolidColorBrush x:Key="secondaryDarkBrush" Color="{StaticResource secondaryDarkColor}"/>
        <SolidColorBrush x:Key="primaryTextBrush" Color="{StaticResource primaryTextColor}"/>
        <SolidColorBrush x:Key="secondaryTextBrush" Color="{StaticResource secondaryTextColor}"/>

        <!-- Header01 style -->
        <Style x:Key="header01" TargetType="{x:Type Label}">
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto Light"></Setter>
            <Setter Property="FontSize" Value="32"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="Margin" Value="0,0,0,7.5"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <!-- Header02 style -->
        <Style x:Key="header02" TargetType="{x:Type Label}">
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto Thin"></Setter>
            <Setter Property="FontSize" Value="28"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <!-- Header03 style-->
        <Style x:Key="header03" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Roboto/#Roboto Thin"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="Margin" Value="0,0,0,2.5"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
        </Style>

        <!-- NormalTextLabel style-->
        <Style x:Key="normalTextLabel" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Open_Sans/#Open Sans Light"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="Margin" Value="0,0,0,2.5"></Setter>
        </Style>

        <!-- NormalTextBlock style-->
        <Style x:Key="normalTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Open_Sans/#Open Sans Light"></Setter>
            <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"></Setter>
            <Setter Property="Margin" Value="0,0,0,2.5"></Setter>
            <Setter Property="TextWrapping" Value="Wrap"></Setter>
        </Style>

        <!-- WarningFeedbackLabel style -->
        <Style x:Key="warningFeedbackLabel" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Open_Sans/#Open Sans"></Setter>
            <Setter Property="Foreground" Value="#e74c3c"></Setter>
            <Setter Property="Height" Value="27.5"></Setter>
            <Setter Property="Margin" Value="0,-5,0,0"></Setter>
        </Style>
        
        <!-- PrimaryBtn style -->
        <Style x:Key="primaryBtn" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Open_Sans/#Open Sans"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="Background" Value="{StaticResource secondaryDarkBrush}"></Setter>
            <Setter Property="Foreground" Value="{StaticResource secondaryTextBrush}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin">
                <Setter.Value>
                    <Point X="0.5" Y="0.5"></Point>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource secondaryLightBrush}"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.925" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="0.925" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="1.0" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="1.0" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                
            </Style.Triggers>
        </Style>
        
        <!-- DefaultBtn style -->
        <Style x:Key="defaultBtn" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Open_Sans/#Open Sans"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="Background" Value="#7f8c8d"></Setter>
            <Setter Property="Foreground" Value="#ecf0f1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin">
                <Setter.Value>
                    <Point X="0.5" Y="0.5"></Point>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#95a5a6"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.925" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="0.925" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="1.0" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="1.0" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </Style.Triggers>
        </Style>

        <!-- DangerBtn style -->
        <Style x:Key="dangerBtn" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="/SchulPunkteUI;component/Fonts/Open_Sans/#Open Sans"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="Background" Value="#c0392b"></Setter>
            <Setter Property="Foreground" Value="#ecf0f1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin">
                <Setter.Value>
                    <Point X="0.5" Y="0.5"></Point>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e74c3c"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.925" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="0.925" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="1.0" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="1.0" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- ImageBtn style -->
        <Style x:Key="imageBtn" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- DefaultListBox style -->
        <Style x:Key="defaultListBox" TargetType="{x:Type ListBox}"></Style>
        
        <!-- DefaultListBoxItem style -->
        <Style x:Key="defaultListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
        </Style>

        <!-- DefaultTextBox style -->
        <Style x:Key="defaultTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="FontFamily" Value="Calibri"></Setter>
        </Style>
        
        <!-- DefaultMenu style -->
        <Style x:Key="defaultMenu" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource primaryDarkBrush}"/>
            <Style.Resources>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="FontSize" Value="14"></Setter>
                    <Setter Property="Background" Value="{StaticResource primaryDarkBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource primaryTextBrush}"/>
                </Style>
                <Style TargetType="{x:Type Separator}">
                    <Setter Property="Foreground" Value="{StaticResource primaryLightBrush}"/>
                </Style>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill" Value="{StaticResource primaryDarkBrush}"/>
                </Style>
            </Style.Resources>
        </Style>
    </Application.Resources>
</Application>
